let moves = {
	whitePawn: {
		two: [-2,0],
		one: [-1,0],
		diagonal: [[-1,1],[-1,-1]]
	},
	blackPawn: {
		two: [2,0],
		one: [1,0],
		diagonal: [[1,1],[1,-1]]
	},
	rook: [[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[-1,0],[-2,0],[-3,0],[-4,0],[-5,0],[-6,0],[-7,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,-1],[0,-2],[0,-3],[0,-4],[0,-5],[0,-6],[0,-7]],
	bishop: [[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[-1,1],[-2,2],[-3,3],[-4,4],[-5,5],[-6,6],[-7,7],[1,-1],[2,-2],[3,-3],[4,-4],[5,-5],[6,-6],[7,-7],[-1,-1],[-2,-2],[-3,-3],[-4,-4],[-5,-5],[-6,-6],[-7,-7]],
	king: function() {
		let possibleMoves = [[1,1],[-1,-1],[-1,1],[1,-1],[1,0],[-1,0],[0,1],[0,-1]];
		if (moveColor == 'white') {
			if (!whiteInCheck) {
				if (checkCastle('', 'white', 'king')) {
					possibleMoves.push([0,2]);
				}
				if (checkCastle('', 'white', 'queen')) {
				    possibleMoves.push([0,-2]);
				}
			}
		} else {
			if (!blackInCheck) {
				if (checkCastle('', 'black', 'queen')) {
				    possibleMoves.push([0,-2]);
				} 
				if (checkCastle('', 'black', 'king')) {
				    possibleMoves.push([0,2]);
				}
			}
		}
		return possibleMoves;
	},
	queen: [[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[-1,0],[-2,0],[-3,0],[-4,0],[-5,0],[-6,0],[-7,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,-1],[0,-2],[0,-3],[0,-4],[0,-5],[0,-6],[0,-7],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[-1,1],[-2,2],[-3,3],[-4,4],[-5,5],[-6,6],[-7,7],[1,-1],[2,-2],[3,-3],[4,-4],[5,-5],[6,-6],[7,-7],[-1,-1],[-2,-2],[-3,-3],[-4,-4],[-5,-5],[-6,-6],[-7,-7]],
	knight: [[2,1],[1,-2],[-2,1],[1,2],[2,-1],[-1,-2],[-2,-1],[-1,2]],
	superpawn: {
		jump: [[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[-1,1],[-2,2],[-3,3],[-4,4],[-5,5],[-6,6],[-7,7],[1,-1],[2,-2],[3,-3],[4,-4],[5,-5],[6,-6],[7,-7],[-1,-1],[-2,-2],[-3,-3],[-4,-4],[-5,-5],[-6,-6],[-7,-7],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[-1,0],[-2,0],[-3,0],[-4,0],[-5,0],[-6,0],[-7,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[0,-1],[0,-2],[0,-3],[0,-4],[0,-5],[0,-6],[0,-7]],
		noJump: [[2,1],[2,-1],[1,2],[1,-2],[-2,1],[-2,-1],[-1,2],[-1,-2]]
	}
}
